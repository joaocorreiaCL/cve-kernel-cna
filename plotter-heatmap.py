#!/usr/bin/python

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

# Load data
data = pd.read_csv('kernel_versions_analysis.csv')

# Define LTS versions (update this list as needed)
lts_versions = ['4.4', '4.9', '4.14', '4.19', '5.4', '5.10', '5.15', '6.1', '6.6']

# Filter data to include only LTS versions
data['Introduced Major.Minor'] = data['Introduced Version'].apply(lambda x: '.'.join(x.split('.')[:2]))
data['Fixed Major.Minor'] = data['Fixed Version'].apply(lambda x: '.'.join(x.split('.')[:2]) if x != 'Not fixed yet' else 'Not fixed')

data = data[data['Introduced Major.Minor'].isin(lts_versions) | data['Fixed Major.Minor'].isin(lts_versions)]

# Create pivot tables for introduced and fixed vulnerabilities
intro_counts = data[data['Introduced Major.Minor'].isin(lts_versions)]['Introduced Major.Minor'].value_counts().reindex(lts_versions, fill_value=0)
fix_counts = data[data['Fixed Major.Minor'].isin(lts_versions)]['Fixed Major.Minor'].value_counts().reindex(lts_versions, fill_value=0)

# Combine introduced and fixed counts into one DataFrame for heatmap
combined_counts = pd.DataFrame({'Introduced': intro_counts, 'Fixed': fix_counts}).fillna(0)

# Create heatmap
plt.figure(figsize=(12, 8))
sns.heatmap(combined_counts, annot=True, cmap="viridis", fmt=".0f")
plt.title('Heatmap of Vulnerabilities for LTS Kernel Versions')
plt.ylabel('Kernel LTS Version')
plt.xlabel('Status (Introduced vs Fixed)')
plt.xticks(rotation=45)
plt.show()
